{
  "name": "swap",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/swap.tsx",
      "content": "import * as React from \"react\"\nimport Image from \"next/image\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { ArrowDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { Button } from \"./button\"\nimport { Card } from \"./card\"\nimport { Input } from \"./input\"\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"./select\"\n\nconst swapVariants = cva(\"relative space-y-2 rounded-2xl p-2\", {\n  variants: {\n    variant: {\n      default: \"\",\n      secondary: \"\",\n      destructive: \"\",\n      outline: \"\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n})\n\nexport interface SwapProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof swapVariants> {\n  coins: { value: string; name: string; image: string }[]\n}\n\nfunction Swap({ className, variant, coins, ...props }: SwapProps) {\n  const [focused, setFocused] = React.useState<\"Sell\" | \"Buy\">(\"Sell\")\n  return (\n    <Card {...props} className={cn(swapVariants({ variant }), className)}>\n      <SwapField\n        side=\"Sell\"\n        setFocused={setFocused}\n        focused={focused}\n        coins={coins}\n        defaultCoin={coins[0]}\n      />\n      <Button\n        variant=\"secondary\"\n        size=\"icon\"\n        className=\"absolute inset-x-1/2 top-[calc(50%-52px)] -translate-x-1/2 border-2 border-card\"\n      >\n        <ArrowDown className=\"h-4 w-4\" />\n      </Button>\n      <SwapField\n        side=\"Buy\"\n        setFocused={setFocused}\n        focused={focused}\n        coins={coins}\n      />\n      <Button className=\"w-full\">Get Started</Button>\n    </Card>\n  )\n}\n\ninterface SwapFieldProps {\n  side?: \"Sell\" | \"Buy\"\n  setFocused: (side: \"Sell\" | \"Buy\") => void\n  focused: \"Sell\" | \"Buy\"\n  coins: { value: string; name: string; image: string }[]\n  defaultCoin?: { value: string; name: string; image: string }\n}\n\nfunction SwapField({\n  side = \"Sell\",\n  setFocused,\n  focused,\n  coins,\n  defaultCoin,\n}: SwapFieldProps) {\n  const focusedField = side === focused\n  return (\n    <Card\n      className={cn(\"flex gap-1 rounded-lg p-4\", !focusedField && \"bg-muted\")}\n      onFocus={() => setFocused(side)}\n    >\n      <div className=\"space-y-2\">\n        <div className=\"text-sm text-muted-foreground\">{side}</div>\n        <Input\n          placeholder=\"0\"\n          className=\"border-none bg-transparent px-0 text-2xl focus-visible:outline-none focus-visible:ring-0 focus-visible:ring-transparent focus-visible:ring-offset-0 md:text-3xl\"\n        />\n        <div className=\"text-sm text-muted-foreground\">$0</div>\n      </div>\n      <div className=\"flex items-center\">\n        <Select defaultValue={defaultCoin?.value}>\n          <SelectTrigger>\n            <SelectValue placeholder=\"Select token\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectGroup>\n              {coins.map((coin) => (\n                <CurrencyItem key={coin.value} coin={coin} />\n              ))}\n            </SelectGroup>\n          </SelectContent>\n        </Select>\n      </div>\n    </Card>\n  )\n}\n\nfunction CurrencyItem({\n  coin,\n}: {\n  coin: {\n    value: string\n    name: string\n    image: string\n  }\n}) {\n  return (\n    <SelectItem value={coin.value} className=\"gap-2 p-2\">\n      <div className=\"flex items-center gap-2\">\n        <Image\n          src={coin.image}\n          alt={coin.name}\n          width={20}\n          height={20}\n          className=\"rounded-full\"\n        />\n        {coin.name}\n      </div>\n    </SelectItem>\n  )\n}\n\nexport { Swap, swapVariants }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}